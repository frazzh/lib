{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/LoadingComponent.js","components/BooksComponent.js","components/SearchComponent.js","components/BookDetailComponent.js","components/ProfileComponent.js","components/AddBookComponent.js","components/HistoryComponent.js","components/IssueComponent.js","components/ReturnComponent.js","components/UserDetailComponent.js","components/StatsComponent.js","components/LogComponent.js","components/UserListComponent.js","redux/ActionTypes.js","baseUrl.js","redux/ActionCreators.js","components/MainComponent.js","redux/books.js","redux/auth.js","redux/issues.js","redux/users.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["required","val","length","maxLength","len","minLength","validEmail","test","Registerer","props","isSignedIn","Fragment","Button","color","outline","onClick","toggleRegister","className","Header","state","isNavOpen","isModalOpen","isRegisterOpen","dropdownOpen","toggleModal","bind","toggleNav","handleLogin","handleLogout","toggle","this","setState","window","innerWidth","event","loginUser","username","value","password","preventDefault","logoutUser","style","marginBottom","Navbar","dark","expand","fixed","NavbarToggler","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","auth","userinfo","admin","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","tag","Link","divider","isAuthenticated","user","isLoading","Modal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","model","values","registerUser","email","roll","firstname","lastname","text","placeholder","validators","show","messages","Component","Footer","Home","scrollTo","Loading","align","RenderBook","book","changeSelected","isAdmin","toggleDeleteModal","toggleEditModal","i","_id","isbn","author","copies","Booklist","list","books","map","booksLoading","booksErrMess","Table","striped","bordered","hover","responsive","Search","cat","onChange","e","options","pos","target","checked","push","splice","colors","nameRegex","RegExp","authorRegex","category_matched","some","category","search","ListGroupItem","Badge","pill","floor","shelf","Row","form","Col","md","for","sm","check","xs","defaultChecked","ListGroup","Card","CardHeader","CardBody","CardTitle","CardText","description","CardFooter","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","parse","createdAt","updatedAt","BookDetail","errMess","Profile","isEditModalOpen","isPasswordModalOpen","togglePasswordModal","original","editUser","defaultValue","newpassword","confirm","editPassword","alert","matchcreds","requiredNum","maxVal","minVal","isNumber","isNaN","Number","AddBook","postBook","uniqueName","uniqueIsbn","select","textarea","rows","totalFine","RenderIssue","issue","dates","today","issueDate","deadline","setDate","getDate","returnDate","returned","Math","min","apply","fine","getTime","History","issues","Issue","usersLoading","usersErrMess","bookoptions","index","defaultBook","useroptions","users","filter","defaultUser","bookid","studentid","postIssue","row","onInput","disabled","returnBook","student","Return","console","log","returnIssue","UserDetail","Stats","CardLink","Log","RenderUser","UserList","BOOKS_LOADING","BOOKS_FAILED","ADD_BOOKS","ADD_BOOK","EDIT_BOOK","DELETE_BOOK","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","EDIT_USER","EDIT_PASSWORD","ISSUES_LOADING","ISSUES_FAILED","ADD_ISSUES","ADD_ISSUE","RETURN_ISSUE","USERS_LOADING","USERS_FAILED","ADD_USERS","baseUrl","dispatch","newBook","bearer","localStorage","getItem","fetch","method","body","JSON","stringify","headers","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","catch","message","fetchUsers","addUsers","usersFailed","booksFailed","errmess","addBooks","editBookdispatch","editUserdispatch","USER","editPasswordDispatch","CREDS","deleteBookdispatch","resp","creds","requestLogin","success","setItem","token","fetchIssues","setTimeout","receiveLogin","bookId","studentId","newIssue","issueId","issueUrl","issuesLoading","addIssues","issuesFailed","removeItem","Main","isDeleteModalOpen","selectedBook","handleSubmitEdit","fetchBooks","editBook","defaultIsbn","defaultName","PrivateRouteCommon","component","rest","render","pathname","from","location","PrivateRouteAdmin","PrivateRoute","exact","path","match","params","notFoundErr","undefined","selectedUser","userId","deleteBook","withRouter","connect","newUser","newCreds","Books","action","concat","newbook","Auth","Issues","newissue","Users","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccc0bd74.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Navbar, Form, FormGroup, Label, Input, Nav, NavbarToggler,Collapse,NavItem, NavbarBrand, Modal, ModalBody, ModalHeader, Button} from 'reactstrap';\r\nimport {Dropdown,DropdownItem,DropdownMenu,DropdownToggle} from 'reactstrap';\r\nimport { NavLink,Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n  function Registerer(props){\r\n    if(props.isSignedIn===false)\r\n    return (\r\n      <React.Fragment>\r\n          &nbsp;\r\n      <Button color=\"primary\" outline onClick={props.toggleRegister}>                    \r\n     <span className=\"fa fa-user-plus fa-lg\"></span> Register\r\n     </Button>\r\n      </React.Fragment>\r\n    );\r\n    else return(\r\n      <React.Fragment>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  \r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n         isNavOpen: false,\r\n         isModalOpen: false,\r\n         isRegisterOpen: false,\r\n         dropdownOpen: false\r\n           }\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.toggleRegister=this.toggleRegister.bind(this);\r\n        this.toggle=this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(){\r\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\r\n    }\r\n    toggleNav(){\r\n        if(window.innerWidth<1200){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    }\r\n\r\n    toggleRegister(event){\r\n      this.setState({\r\n        isRegisterOpen: !this.state.isRegisterOpen\r\n      });\r\n\r\n    }\r\n\r\n    handleLogin(event) {\r\n      this.toggleModal();\r\n      this.props.loginUser({username: this.username.value, password: this.password.value});\r\n      event.preventDefault();\r\n  }\r\n\r\n  handleLogout() {\r\n      this.props.logoutUser();\r\n  }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div style={{marginBottom: \"100px\"}}>\r\n                 <Navbar color=\"dark\" dark expand=\"xl\" fixed=\"top\">\r\n                    <div className=\"container\">\r\n                     <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\r\n                     <NavbarBrand className=\"mr-auto text-primary\" href=\"/home\">\r\n                     Immunify Library\r\n                     </NavbarBrand>\r\n                     <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                     <Nav navbar>\r\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\r\n                            <NavLink className=\"nav-link text-primary\" to=\"/home\">\r\n                               <span className=\"fa fa-home fa-lg\"/> Home\r\n                           </NavLink>\r\n                        </NavItem>\r\n                        {this.props.auth.userinfo&&this.props.auth.userinfo.admin?(\r\n                            <NavItem className=\"\">\r\n                            <Dropdown  isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                            <DropdownToggle color=\"Primary\" >\r\n                            <div className=\"text-primary\">\r\n                                                    <span className=\"fa fa-book fa-lg\"/> Books\r\n                                                   &nbsp; <i className=\"fa fa-caret-down fa-sm\" aria-hidden=\"true\"></i>\r\n\r\n                                                </div>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/books\">View / Modify books</DropdownItem>\r\n                              <DropdownItem divider/>\r\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/add_book\" >Add book</DropdownItem>\r\n                            </DropdownMenu>\r\n                          </Dropdown>\r\n                          </NavItem>\r\n                        ):(\r\n                            <NavItem className=\"ml-2\" onClick={this.toggleNav}>\r\n                                  <NavLink className=\"nav-link text-primary\" to=\"/books\">\r\n                                                    <span className=\"fa fa-book fa-lg\"/> Books\r\n                                                </NavLink>\r\n                              </NavItem>\r\n    \r\n                        )}\r\n                        \r\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\r\n                            <NavLink className=\"nav-link text-primary\" to=\"/search\">\r\n                                <span className=\"fa fa-search fa-lg\"/> Search\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        {\r\n                            (this.props.auth.isAuthenticated)?(\r\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                                <NavLink className=\"nav-link text-primary\" to=\"/profile\">\r\n                                     <span className=\"fa fa-user-circle-o fa-lg\"/> My Profile\r\n                                </NavLink>\r\n                                </NavItem>\r\n                            ):\r\n                            (<div/>)\r\n                        }\r\n                        {\r\n                            (this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin)?(\r\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                               <NavLink className=\"nav-link text-primary\" to=\"/history\">\r\n                                     <span className=\"fa fa-history\"/> Issue history\r\n                                </NavLink>\r\n                                </NavItem>\r\n                            ):\r\n                            (<div/>)\r\n                        }\r\n                         {\r\n                            (this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin)?(\r\n                              <React.Fragment>\r\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                                <NavLink className=\"nav-link text-primary\" to=\"/issue\">\r\n                                     <span className=\"fa fa-plus-square\"/> Issue Book\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                                <NavLink className=\"nav-link text-primary\" to=\"/return\">\r\n                                   <span className=\"fa fa-list-ul\"/> Return Book\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                                <NavLink className=\"nav-link text-primary\" to=\"/stats\">\r\n                                   <span className=\"fa fa-info-circle\"/> Stats\r\n                                </NavLink>\r\n                                </NavItem>\r\n                              </React.Fragment>\r\n                            ):\r\n                            (<div/>)\r\n                        }\r\n                     </Nav>\r\n                     <Nav className=\"ml-auto\" navbar>\r\n                     <NavItem>\r\n                                    { !this.props.auth.isAuthenticated ?\r\n                        <Button outline color=\"primary\" onClick={this.toggleModal}>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                            {this.props.auth.isLoading ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        :\r\n                                        <div>\r\n                                        <div className=\"navbar-text mr-3\">{this.props.auth.user.username}</div>\r\n                                        <Button outline color=\"primary\" onClick={this.handleLogout}>\r\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                            {this.props.auth.isLoading ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        </div>\r\n                                    }\r\n\r\n\r\n                    <Registerer isSignedIn={this.props.auth.isAuthenticated} toggleRegister={()=>{this.toggleRegister()}}/>\r\n                     </NavItem>\r\n                      </Nav>\r\n                     </Collapse>\r\n                    </div>\r\n                 </Navbar>\r\n                 <Modal isOpen={!this.props.auth.isAuthenticated&&this.state.isModalOpen} toggle={this.toggleModal}>\r\n                     <ModalHeader toggle={this.toggleModal}>\r\n                         Sign In\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                     </Modal>\r\n                 <Modal isOpen={this.state.isRegisterOpen} toggle={this.toggleRegister}>\r\n                     <ModalHeader toggle={this.toggleRegister}>\r\n                         Register \r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                     <LocalForm model=\"user\" onSubmit={(values) => {\r\n                           this.toggleRegister();\r\n                            this.props.registerUser({\r\n                              username: values.username,\r\n                               password: values.password,\r\n                               email: values.email,\r\n                               roll: values.roll,\r\n                               firstname: values.firstname,\r\n                               lastname: values.lastname });\r\n                              }}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Control.text model=\".username\" id=\"username\" name=\"username\" \r\n                            className=\"form-control\" placeholder=\"Username\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".username\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \r\n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"firstname\">First Name</Label>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                            className=\"form-control\" placeholder=\"firstname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"lastname\">Last Name</Label>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                            className=\"form-control\" placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"roll\">Roll No.</Label>\r\n                                <Control.text model=\".roll\" id=\"roll\" name=\"roll\" \r\n                            className=\"form-control\" placeholder=\"roll\" validators={{required,minLength: minLength(3),maxLength:maxLength(12)}} />\r\n                            <Errors className=\"text-danger\" model=\".roll\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 12 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"email\">E-mail</Label>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\r\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\r\n                            validEmail: ' Enter a valid email'}}/>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Sign Up</Button>\r\n                        </LocalForm>\r\n                     </ModalBody>\r\n                 </Modal>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        }\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <></>\r\n    );\r\n}\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4 home text-center align-self-center\">\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"col-12 heading justify-content-center loading\">\r\n            <br/><br/>\r\n            <br/><br/>\r\n            <h1 align=\"center\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <br/><br/>\r\n            Loading ....</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React,{Component} from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Loading from './LoadingComponent.js';\r\n\r\n// RenderBook is a functional component\r\nfunction RenderBook ({book, changeSelected ,isAdmin, toggleDeleteModal,toggleEditModal,i}) {\r\n    return (\r\n            <React.Fragment>\r\n            <td>\r\n            {i}\r\n            </td>\r\n            <td>\r\n            <Link to={`/books/${book._id}`}>\r\n            {book.name}\r\n            </Link>\r\n            </td>\r\n            <td>\r\n            {book.isbn}\r\n            </td>\r\n            <td>\r\n                {book.author}\r\n            </td>\r\n            <td>\r\n                {book.copies}\r\n            </td>\r\n            {isAdmin?(<td><span onClick={()=>{changeSelected(book._id); toggleEditModal(); }} className=\"Option fa fa-pencil\"/>\r\n                          &nbsp; &nbsp; <span onClick={()=>{changeSelected(book._id); toggleDeleteModal();}} className=\"Option fa fa-trash\"/>\r\n                        </td>):(<React.Fragment/>)}\r\n            </React.Fragment>\r\n       );\r\n}\r\n\r\n\r\nclass Booklist extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        }\r\n        this.i=1;\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n      \r\nrender(){\r\n    const list = this.props.books.map((book) => {\r\n        return (\r\n                <tr key={book.name}>\r\n                    <RenderBook book={book} isAdmin={this.props.isAdmin} changeSelected={this.props.changeSelected}\r\n                    toggleDeleteModal={this.props.toggleDeleteModal}\r\n                    toggleEditModal={this.props.toggleEditModal}\r\n                    i={this.i++}\r\n                    />\r\n                </tr>\r\n        );\r\n    });\r\n\r\n    if (this.props.booksLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.booksErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.booksErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n    {\r\n    return(\r\n        \r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 heading\">\r\n             <h3 align=\"center\">List of All books</h3>\r\n             <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>S.No.</th>\r\n            <th>Name of Book</th>\r\n            <th>ISBN number</th>\r\n            <th>Authors</th>\r\n            <th>Copies available</th>\r\n            {this.props.isAdmin?(<th>Edit / <br/>Delete</th>):(<React.Fragment/>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {list}\r\n        </tbody>\r\n        </Table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        );\r\n}\r\n}\r\n\r\n}\r\n\r\nexport default Booklist;","import React,{Component} from 'react';\r\nimport { Form,FormGroup,Row,Col,Label, Input, Badge, ListGroupItem, ListGroup } from 'reactstrap';\r\nimport Loading from './LoadingComponent.js';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name: '',\r\n            author: '',\r\n            cat:['Romance','Technology','Computer Science','Management','Electronics','Physics','Chemistry','Mathematics','Fiction','Philosophy','Language','Arts','Other']\r\n        }\r\n        this.onChange=this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        const options = this.state.cat;\r\n        let pos=-1;\r\n    \r\n        if (e.target.checked) {\r\n            options.push(e.target.value)\r\n        } else {\r\n          let i=0;\r\n          for(; i<options.length; i++){\r\n              if(options[i]===(e.target.value)) {\r\n                  pos=i;\r\n                  break;\r\n                }\r\n                else{\r\n                }\r\n          }\r\n          options.splice(pos, 1)\r\n        }\r\n        this.setState({ cat: options });\r\n      }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n      \r\nrender(){\r\n    var colors=[\"warning\",\"danger\",\"success\",\"info\",\"secondary\"];\r\n    var nameRegex=new RegExp(this.state.name, 'i');\r\n    var authorRegex=new RegExp(this.state.author, 'i');\r\n    const list = this.props.books.map((book) => {\r\n        let category_matched=this.state.cat.some((category)=>(category===book.cat));\r\n        if(((book.name).search(nameRegex)!==-1)&&((book.author).search(authorRegex)!==-1)&&category_matched)\r\n        return (\r\n            <ListGroupItem key={book._id}>\r\n                         <Link to={`/books/${book._id}`}>\r\n                         <b>{`${book.name}  `}</b> \r\n                         </Link>\r\n                          <Badge color={colors[book.cat.length%5]} pill> {book.cat}</Badge>\r\n             {this.props.isAdmin?(\r\n             <React.Fragment>&nbsp; &nbsp;<span onClick={()=>{this.props.changeSelected(book._id); this.props.toggleEditModal(); }} className=\"Option fa fa-pencil\"/>\r\n                {'  '}&nbsp;   &nbsp;        <span onClick={()=>{this.props.changeSelected(book._id); this.props.toggleDeleteModal();}} className=\"Option fa fa-trash\"/>\r\n                          </React.Fragment>\r\n             ):(<React.Fragment/>)}\r\n            \r\n            <br/> <p className=\"ml-auto\"> Authors : {`    ${book.author}`}</p>\r\n             <p> {book.copies} Copies available</p>\r\n             <p>Location : {` Floor- ${book.floor}, Shelf- ${book.shelf}`}</p>\r\n            </ListGroupItem>        );\r\n            else return (<React.Fragment/>);\r\n    });\r\n    if (this.props.booksLoading) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.booksErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.booksErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n    {\r\n    return(\r\n        \r\n        <div className=\"container loading\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 heading\">\r\n             <h3 align=\"center\">Search your book here : </h3>\r\n             <Form>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name of book</Label>\r\n              <Input type=\"name\" name=\"name\" id=\"name\" value={this.state.name} onChange={(e)=>{this.setState({name: e.target.value});}} placeholder=\"Enter name of the book\" />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"author\">Author</Label>\r\n              <Input type=\"author\" name=\"author\" id=\"author\" value={this.state.author}  onChange={(e)=>{this.setState({author: e.target.value});}} placeholder=\"Enter name of author\" />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row> \r\n        <Row>\r\n        <Col sm={6} md={2}>\r\n            Category : {' '}\r\n        </Col>\r\n        </Row>\r\n        <FormGroup check>\r\n        <Row>\r\n        <Col xs={6} md={3}>\r\n          <Label check for=\"romance\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"romance\" value=\"Romance\" name=\"cat\" />\r\n            Romance \r\n          </Label>\r\n        </Col>\r\n        <Col xs={6} md={3}>\r\n          <Label check for=\"fiction\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"fiction\" value=\"Fiction\" name=\"cat\" />\r\n            Fiction\r\n          </Label>\r\n          </Col>\r\n\r\n          <Col xs={6} md={3}>\r\n          <Label check for=\"Arts\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Arts\" value=\"Arts\" name=\"cat\" />\r\n            Arts\r\n          </Label>\r\n          </Col>\r\n          <Col xs={6} md={3}>\r\n          <Label check for=\"computer\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"computer\" value=\"Computer Science\" name=\"cat\" />\r\n            Computer Science\r\n          </Label>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n        <Col xs={6} md={3}>\r\n          <Label check for=\"management\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"management\" value=\"Management\" name=\"cat\" />\r\n            Management \r\n          </Label>\r\n        </Col>\r\n        <Col xs={6} md={3}>\r\n          <Label check for=\"Physics\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Physics\" value=\"Physics\" name=\"cat\" />\r\n            Physics\r\n          </Label>\r\n          </Col>\r\n\r\n          <Col xs={6} md={3}>\r\n          <Label check for=\"technology\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"technology\" value=\"Technology\"  name=\"cat\" />\r\n            Technology\r\n          </Label>\r\n          </Col>\r\n          <Col xs={6} md={3}>\r\n          <Label check for=\"Philosophy\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Philosophy\" value=\"Philosophy\" name=\"cat\" />\r\n            Philosophy\r\n          </Label>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n        <Col xs={6} md={3}>\r\n          <Label check for=\"Mathematics\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Mathematics\" value=\"Mathematics\" name=\"cat\" />\r\n            Mathematics \r\n          </Label>\r\n        </Col>\r\n        <Col xs={6} md={3}>\r\n          <Label check for=\"Chemistry\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Chemistry\" value=\"Chemistry\" name=\"cat\" />\r\n            Chemistry\r\n          </Label>\r\n          </Col>\r\n\r\n          <Col xs={6} md={3}>\r\n          <Label check for=\"Electronics\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Electronics\" value=\"Electronics\" name=\"cat\" />\r\n            Electronics\r\n          </Label>\r\n          </Col>\r\n          <Col xs={6} md={3}>\r\n          <Label check for=\"Language\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Language\" value=\"Language\" name=\"cat\" />\r\n            Language\r\n          </Label>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col xs={6} md={3}>\r\n          <Label check for=\"Other\">\r\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Other\" value=\"Other\" name=\"cat\" />\r\n            Other\r\n          </Label>\r\n          </Col>\r\n        </Row>\r\n        </FormGroup>\r\n        </Form>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n        <div className=\"col-12\">\r\n      <br/>\r\n      <ListGroup>\r\n      {list}\r\n      </ListGroup>\r\n      </div>\r\n      </div>\r\n      <br/>\r\n    </div>\r\n\r\n        );\r\n}\r\n}\r\n\r\n}\r\n\r\nexport default Search;","import React,{Component} from 'react';\r\nimport {Row,Col, Card, CardText, CardHeader, CardFooter, CardBody,CardTitle } from 'reactstrap';\r\nimport Loading from './LoadingComponent';\r\nfunction RenderBook({book,isAdmin,toggleEditModal,changeSelected}) {\r\n    if (book != null)\r\n        return(\r\n        <Card>\r\n       \r\n       <CardHeader tag=\"h3\">{book.name} &nbsp; &nbsp; &nbsp;&nbsp;\r\n       {isAdmin?(<span className=\"fa fa-pencil Option\" onClick={()=>{changeSelected(book._id);toggleEditModal();}}/>):(<React.Fragment/>)}\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardTitle align=\"right\"> - {book.author}</CardTitle>\r\n          <CardText>\r\n              <b> Category: </b> {book.cat} <br/><br/>\r\n              <b> ISBN number: </b> {book.isbn} <br/><br/>\r\n              <b>Descrption: </b><br/> {book.description} <br/><br/>\r\n              <b> Location: </b> <br/>Shelf no. {book.shelf} ,<br/>\r\n              {book.floor===0?' Ground ':book.floor}{(book.floor===1)?'st ':(book.floor===2)?'nd ':(book.floor===3)?'rd ':(book.floor===0)?'':'th '}\r\n              Floor <br/><br/>\r\n             <b> Copies available : </b> {book.copies}\r\n      </CardText><br/>\r\n        </CardBody>\r\n        <CardFooter className=\"text-muted\">\r\n        <Row>\r\n        <Col md={6}>\r\n        Created at : {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit', hour: 'numeric',minute: 'numeric', hour12: true }).format(new Date( Date.parse(book.createdAt)))}    \r\n        </Col>\r\n        <Col md={6}>\r\n        Last updated at : {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit',hour: 'numeric',minute: 'numeric', hour12: true}).format(new Date( Date.parse(book.updatedAt)))} \r\n        </Col>\r\n        </Row>\r\n        </CardFooter>\r\n        </Card>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n        }\r\n\r\n\r\nclass BookDetail extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\nrender(){\r\n  if (this.props.isLoading) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nelse if (this.props.errMess) {\r\n    return(\r\n        <div className=\"container loading\">\r\n            <div className=\"row heading\"> \r\n                <div className=\"col-12\">\r\n                    <br/><br/><br/><br/>\r\n                    <h3>{this.props.errMess}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nelse\r\n    return(\r\n\r\n        <div className=\"container full\">\r\n        <div className=\"row heading\">\r\n          <div className=\"col-12\">\r\n          <br/>        <br/>\r\n          <RenderBook book={this.props.book} isAdmin={this.props.isAdmin}\r\n                    toggleEditModal={this.props.toggleEditModal}\r\n                    changeSelected={this.props.changeSelected}>\r\n              </RenderBook>\r\n\r\n        <br/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        );\r\n}\r\n\r\n}\r\n\r\nexport default BookDetail;","import React,{Component} from 'react';\r\nimport {Card,CardBody,CardHeader,Label,CardText,Button,Modal,ModalBody,ModalHeader,FormGroup} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst matchcreds = (original) => (val) =>  (val===original);\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isEditModalOpen: false,\r\n            isPasswordModalOpen: false\r\n        }\r\n        this.toggleEditModal=this.toggleEditModal.bind(this);\r\n        this.togglePasswordModal=this.togglePasswordModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\n    togglePasswordModal(){\r\n        this.setState({\r\n            isPasswordModalOpen: !this.state.isPasswordModalOpen\r\n        });\r\n    }\r\n\r\n    toggleEditModal(){\r\n            this.setState({isEditModalOpen: !this.state.isEditModalOpen});\r\n          }\r\n      \r\n\r\nrender(){\r\n    if(this.props.auth.userinfo===null){\r\n        return (\r\n            <div className=\"row heading\">\r\n                Failed to fetch. Please reload the page\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n\r\n        <div className=\"container mt-6 home text-center align-self-center\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            \r\n            <Card className=\"heading\">\r\n                \r\n        <CardHeader><h3>My Profile</h3></CardHeader>\r\n        <CardBody>\r\n          <CardText>\r\n          <h5> First Name : {'          '+this.props.auth.userinfo.firstname}</h5>\r\n          <h5> Last Name : {'          '+this.props.auth.userinfo.lastname}</h5>\r\n          <h5> {(this.props.auth.userinfo.admin)?'Admin Id : ':'Roll No.'} : {'          '+this.props.auth.userinfo.roll}</h5>\r\n          <h5> Email : {'          '+this.props.auth.userinfo.email}</h5>\r\n          </CardText>\r\n          \r\n          <Button color=\"info\" onClick={this.toggleEditModal}>Edit &nbsp;{'   '}<span className=\"fa fa-pencil\"/></Button>\r\n        {' '}\r\n{this.props.auth.userinfo.admin?<div/>:        <Button color=\"info\" onClick={this.togglePasswordModal}>Change Password &nbsp;{'   '}<span className=\"fa fa-key\"/></Button>}\r\n\r\n        </CardBody>\r\n          </Card>\r\n            </div>\r\n            <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\r\n                     <ModalHeader toggle={this.toggleEditModal}>\r\n                         Edit Profile\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                     <LocalForm model=\"user\" onSubmit={(values) => {\r\n                               this.toggleEditModal();\r\n                               this.props.editUser(this.props.auth.userinfo._id, values.firstname, \r\n                                values.lastname, values.roll, values.email);     \r\n                                 }}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"firstname\">First Name</Label>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.firstname}\r\n                             placeholder=\"firstname\" \r\n                             validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"lastname\">Last Name</Label>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.lastname}\r\n                            placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"roll\">Roll No.</Label>\r\n                                <Control.text model=\".roll\" id=\"roll\" name=\"roll\" \r\n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.roll}\r\n                            placeholder=\"roll\" validators={{required,minLength: minLength(3),maxLength:maxLength(12)}} />\r\n                            <Errors className=\"text-danger\" model=\".roll\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 12 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"email\">E-mail</Label>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                 defaultValue={this.props.auth.userinfo.email} \r\n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\r\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\r\n                            validEmail: ' Enter a valid email'}}/>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                        </LocalForm>\r\n                     </ModalBody>\r\n               \r\n          </Modal>\r\n\r\n          <Modal isOpen={this.state.isPasswordModalOpen} toggle={this.togglePasswordModal}>\r\n                     <ModalHeader toggle={this.togglePasswordModal}>\r\n                         Change Password\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                     <LocalForm model=\"passwordform\" onSubmit={(values) => {\r\n                         if(values.newpassword===values.confirm){\r\n                               this.togglePasswordModal();\r\n                               this.props.editPassword(this.props.auth.userinfo._id, this.props.auth.user.username, \r\n                                values.newpassword);     \r\n                               }\r\n                        else {\r\n                            alert(\"Your passwords didn't match. Please try again\");\r\n                        }\r\n                                 }}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"password\">Current Password</Label>\r\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \r\n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20),\r\n                            matchcreds: matchcreds(this.props.auth.user.password)}} />\r\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less',\r\n                            matchcreds: ' Enter the correct password'}}/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"newpassword\">New password</Label>\r\n                                <Control.password model=\".newpassword\" id=\"newpassword\" name=\"newpassword\" \r\n                            className=\"form-control\" placeholder=\"New Password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\r\n                            }}  />\r\n                            <Errors className=\"text-danger\" model=\".newpassword\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\r\n                      }}/>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup>\r\n                            <Label htmlFor=\"confirm\">Confirm Password</Label>\r\n                                <Control.password model=\".confirm\" id=\"confirm\" name=\"confirm\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Re-enter the new password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\r\n                                 } } />\r\n                            <Errors className=\"text-danger\" model=\".confirm\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\r\n                       }}/>\r\n                            </FormGroup>\r\n                            \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                        </LocalForm>\r\n                     </ModalBody>               \r\n          </Modal>\r\n            </div>\r\n        );\r\n}\r\n\r\n}\r\n\r\nexport default Profile;","import React,{Component} from 'react';\r\nimport {Button, Label, Col, Row} from 'reactstrap';\r\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\r\nimport Loading from './LoadingComponent';\r\n\r\nconst required = (val) => val && val.length;\r\nconst requiredNum = (val) => !!(val);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst maxVal = (len) => (val) => !(val) || (val<= len);\r\nconst minVal = (len) => (val) => (val) && (val>= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\nclass AddBook extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        }\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\nrender(){\r\n    let uniqueIsbn=(val) =>(!this.props.books.some((book)=>(book.isbn===val)))\r\n    let uniqueName=(val) =>(!this.props.books.some((book)=>(book.name===val)))\r\n\r\n    if (this.props.booksLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.booksErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.booksErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n return (\r\n    <div className=\"container\">\r\n    <div className=\"row justify-content-center heading\">\r\n    <div className=\"col-12\">\r\n  <h3 align=\"center\">  Add a book</h3>\r\n  </div>\r\n    </div>\r\n    <div className=\"row row-content justify-content-center\">\r\n    <LocalForm onSubmit={(values) => {\r\n        this.props.postBook(values.name, values.author, values.description, values.isbn, values.cat, values.floor, values.shelf, values.copies);\r\n    }}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\r\n                                <Col md={4}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name of book\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),uniqueName\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: ' Must be greater than 2 characters',\r\n                                            uniqueName: ' There exists a book with this name already'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                                 <Label htmlFor=\"author\" md={2}>Authors </Label>\r\n                                <Col md={4}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Name of authors\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: ' Must be greater than 2 characters'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"isbn\" md={2}>ISBN No.</Label>\r\n                                <Col md={4}>\r\n                                    <Control.text model=\".isbn\" id=\"isbn\" name=\"isbn\"\r\n                                        placeholder=\"ISBN no. of book\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10), maxLength: maxLength(13), isNumber,\r\n                                            uniqueIsbn\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".isbn\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: ' Must be greater than 9 numbers',\r\n                                            maxLength: ' Must be 13 numbers or less',\r\n                                            isNumber: ' Must be a number',\r\n                                            uniqueIsbn: ' There exists a book with this ISBN No.'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                                <Label htmlFor=\"copies\" md={3}> Copies Available</Label>\r\n                                <Col md={3}>\r\n                                    <Control.text model=\".copies\" id=\"copies\" name=\"copies\"\r\n                                        placeholder=\"Number of copies available\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(1000), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".copies\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: ' Must be greater than 0',\r\n                                            maxVal: ' Must be 1000 or less',\r\n                                            isNumber: ' Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n      \r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"cat\">Category</Label>\r\n                            <Control.select defaultValue=\"Romance\" model=\".cat\" id=\"cat\" className=\"form-control\">\r\n                              <option>Romance</option> <option>Technology</option>\r\n                              <option>Computer Science</option> <option>Management</option>\r\n                              <option>Electronics</option> <option>Physics</option>\r\n                              <option>Chemistry</option> <option>Mathematics</option>\r\n                              <option>Fiction</option> <option>Philosophy</option>\r\n                              <option>Language</option> <option>Arts</option>\r\n                              <option>Other</option> \r\n\r\n                            </Control.select>\r\n                            </Col>\r\n                            <Col>\r\n                            <Label htmlFor=\"floor\">Floor </Label>\r\n                            <Control.select defaultValue={0} model=\".floor\" id=\"floor\" \r\n                            className=\"form-control\" >\r\n                              <option>0</option> <option>1</option>\r\n                              <option>2</option> <option>3</option>\r\n                              <option>4</option> <option>5</option>\r\n                              <option>6</option> <option>7</option>\r\n                              <option>8</option> \r\n                            </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row className=\"form-group text-center justify-content-center\">\r\n                                <Label htmlFor=\"shelf\" md={3}> Shelf</Label>\r\n                                <Col md={6}>\r\n                                    <Control.text model=\".shelf\" id=\"shelf\" name=\"shelf\"\r\n                                        placeholder=\"Shelf no. for locating book\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(100), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".shelf\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: ' Must be greater than 0',\r\n                                            maxVal: ' Must be 100 or less',\r\n                                            isNumber: ' Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                     \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\r\n                                        rows=\"12\"\r\n                                        placeholder=\"Some description of the book\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                          <Row className=\"align-self-center\">\r\n                          <Col className=\"text-center\">\r\n                        <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n                        </Button>\r\n                        </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                    </div>\r\n                <br/>\r\n    </div>\r\n );\r\n\r\n}\r\n\r\n}\r\n\r\nexport default AddBook;","import React,{Component} from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Loading from './LoadingComponent.js';\r\n\r\nconst fineRate=1;\r\nlet totalFine=0;\r\nconst allowedDays=30;\r\nfunction RenderIssue ({issue,i}) {\r\n    const dates=[];\r\n    const today= new Date();\r\n    dates.push(today);\r\n    const issueDate=new Date(Date.parse(issue.createdAt));\r\n    const deadline = new Date( Date.parse(issue.createdAt));\r\n    deadline.setDate(deadline.getDate()+30);\r\n    dates.push(deadline);\r\n    const returnDate=issue.returned?new Date(Date.parse((issue.updatedAt))):(new Date(Math.min.apply(null,dates)));\r\n    let fine=0;\r\n      if(((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))>allowedDays)\r\n      {\r\n        fine=Math.floor((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))*fineRate;\r\n      }\r\n   totalFine+=fine;\r\n    return (\r\n            <React.Fragment>\r\n            <td>\r\n            {i}\r\n            </td>\r\n            <td>\r\n            <Link to={`/books/${issue.book._id}`}>\r\n            {issue.book.name}\r\n            </Link>\r\n            </td>\r\n            <td>\r\n            {issue.book.isbn}\r\n            </td>\r\n            <td>\r\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(issue.createdAt)))}\r\n            </td>\r\n            <td>\r\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(deadline)}\r\n            </td>\r\n            <td>\r\n                {\r\n        issue.returned?('Returned on '+(new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(returnDate)))))                    \r\n               :('Not returned yet')\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    fine\r\n                }\r\n            </td>\r\n            </React.Fragment>\r\n       );\r\n}\r\n\r\nclass History extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n         }\r\n        this.i=1; \r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\nrender(){\r\n\r\n    if (this.props.issues.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.issues.errMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(this.props.issues.issues.length===0){\r\n        return (\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12 text-center\">\r\n                        <br/><br/><br/><br/>\r\n                        <h4>{'You have not issued any books.'}</h4> \r\n                        <h4>{'Request admin to issue a book'}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        const list = this.props.issues.issues.map((issue) => {\r\n            return (\r\n                    <tr key={issue._id}>\r\n                        <RenderIssue issue={issue} \r\n                                     i={this.i++}\r\n                        />\r\n                    </tr>\r\n            );\r\n        });\r\n    \r\n        return(\r\n\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n                <h3>Issue History</h3>\r\n                <Table striped bordered hover responsive>\r\n        <thead>\r\n           <tr>\r\n            <th>S.No.</th>\r\n            <th>Name of Book</th>\r\n            <th>ISBN number</th>\r\n            <th>Issue Date</th>\r\n            <th>Return Deadline</th>\r\n            <th>Return status</th> \r\n            <th>Fine (in Rs.)</th> \r\n           </tr>\r\n        </thead>\r\n        <tbody>\r\n            {list}\r\n        </tbody>\r\n        </Table>\r\n            <br/>\r\n            <h6> Total Fine due (if all pending books are returned today) : Rs. {totalFine} </h6>\r\n            <br/>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default History;","import React,{Component} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Col,Row } from 'reactstrap';\r\nimport Loading from './LoadingComponent';\r\n\r\n\r\nclass Issue extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        isbn: '',\r\n        roll: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\nrender(){\r\n    if (this.props.booksLoading||this.props.usersLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.booksErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.booksErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.usersErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.usersErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n   {\r\n    const bookoptions= this.props.books.map((book,index)=>(<option \r\n    key={book.isbn}>{book.isbn}</option>));\r\n    const defaultBook=this.props.books[0];\r\n    // To just get list of the students (not the admins)\r\n    let useroptions=this.props.users.filter((user)=>(!user.admin));\r\n    const defaultUser=useroptions[0];\r\n    useroptions= useroptions.map((user,index)=>(<option \r\n    key={user.roll}>{user.roll}</option>))\r\n    if(this.state.isbn==='') {\r\n        this.setState({isbn: defaultBook.isbn,roll: defaultUser.roll  });\r\n    }\r\n    return (\r\n    <div className=\"container full\">\r\n    <div className=\"row justify-content-center heading\">\r\n    <div className=\"col-12\">\r\n  <h3 align=\"center\">  Issue book</h3>\r\n  </div>\r\n    </div>\r\n    <div className=\"row row-content justify-content-center\">\r\n    <Form onSubmit={(e) => {\r\n        let bookid=this.props.books.filter((book)=>(book.isbn===this.state.isbn))[0]._id\r\n        let studentid=this.props.users.filter((user)=>(user.roll===this.state.roll))[0]._id;\r\n        this.props.postIssue(bookid,studentid);\r\n        e.preventDefault();\r\n    }}>\r\n\r\n        <FormGroup row>\r\n          <Label htmlFor=\"isbn\"> ISBN No. of book</Label>\r\n            <Input type=\"select\" defaultValue={defaultBook.name} name=\"isbn\" id=\"isbn\" className=\"form-control\" onInput={(e)=>{this.setState({isbn: e.target.value})}}>\r\n                  {bookoptions}\r\n            </Input>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"roll\"> Roll No. of student </Label>\r\n            <Input type=\"select\" id=\"roll\" \r\n                   className=\"form-control\" onInput={(e)=>{this.setState({roll: e.target.value})}}>\r\n                   {useroptions}\r\n            </Input>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"name\"> Name of book </Label>\r\n             <Input type=\"text\" id=\"name\" name=\"name\"\r\n                    placeholder=\"Name of Book\" defaultValue={defaultBook.name}\r\n                    value={!this.state.isbn?''\r\n                    :this.props.books.filter((book)=>(book.isbn===this.state.isbn))[0].name}\r\n                    className=\"form-control\" disabled/>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"author\"> Authors </Label>\r\n            <Input type=\"text\" id=\"author\" name=\"author\"\r\n                   placeholder=\"Name of authors\" \r\n                   defaultValue={defaultBook.author}\r\n                   value={!this.state.isbn?''\r\n                   :this.props.books.filter((book)=>(book.isbn===this.state.isbn))[0].author}\r\n                    className=\"form-control\" disabled/>\r\n         </FormGroup>\r\n         <FormGroup row>\r\n          <Label htmlFor=\"name_student\"> Name of student </Label>\r\n            <Input type=\"text\" id=\"name_student\" name=\"name_student\"\r\n                   placeholder=\"Name of student\" \r\n                   defaultValue={defaultUser.firstname+' '+defaultUser.lastname}\r\n                   value={!this.state.roll?''\r\n                   :this.props.users.filter((user)=>(user.roll===this.state.roll))[0].firstname+' '+\r\n                   this.props.users.filter((user)=>(user.roll===this.state.roll))[0].lastname}\r\n                    className=\"form-control\" disabled/>\r\n         </FormGroup>\r\n         <FormGroup row>\r\n          <Label htmlFor=\"username\"> Username of student </Label>\r\n            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                   placeholder=\"Username of student\" \r\n                   defaultValue={defaultUser.username}\r\n                   value={!this.state.roll?''\r\n                   :this.props.users.filter((user)=>(user.roll===this.state.roll))[0].username}\r\n                    className=\"form-control\" disabled/>\r\n         </FormGroup>\r\n         <Row className=\"align-self-center\">\r\n            <Col className=\"text-center\">\r\n              <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n               </Button>\r\n            </Col>\r\n        </Row>\r\n      </Form>\r\n     </div>\r\n     <br/>\r\n    </div>\r\n );\r\n\r\n}\r\n}\r\n}\r\n\r\nexport default Issue;","import React,{Component} from 'react';\r\nimport { Table,Button } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Loading from './LoadingComponent.js';\r\n\r\nconst fineRate=1;\r\nlet totalFine=0;\r\nconst allowedDays=30;\r\nfunction RenderIssue ({issue,i,returnBook}) {\r\n    const dates=[];\r\n    const today= new Date();\r\n    dates.push(today);\r\n    const issueDate=new Date(Date.parse(issue.createdAt));\r\n    const deadline = new Date( Date.parse(issue.createdAt));\r\n    deadline.setDate(deadline.getDate()+30);\r\n    dates.push(deadline);\r\n    const returnDate=issue.returned?new Date(Date.parse((issue.updatedAt))):(new Date(Math.min.apply(null,dates)));\r\n    let fine=0;\r\n      if(((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))>allowedDays)\r\n      {\r\n        fine=Math.floor((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))*fineRate;\r\n      }\r\n   totalFine+=fine;\r\n    return (\r\n            <React.Fragment>\r\n            <td>\r\n            {i}\r\n            </td>\r\n            <td>\r\n        <Link to={`/users/${issue.student._id}`}>\r\n        {issue.student.firstname+' '+issue.student.lastname}\r\n            </Link>\r\n            </td>\r\n            <td>\r\n            {issue.student.roll}\r\n            </td>\r\n            <td>\r\n                {issue.book==null ? \"N/A\":<Link to={`/books/${issue.book._id}`}>\r\n            {issue.book.name}\r\n            </Link>}\r\n            </td>\r\n            <td>\r\n            {issue.book==null ? \"N/A\":issue.book.isbn}     \r\n            </td>\r\n            <td>\r\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(issue.createdAt)))}\r\n            </td>\r\n            <td>\r\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(deadline)}\r\n            </td>\r\n            <td>\r\n                {\r\n                    fine\r\n                }\r\n            </td>\r\n            <td>\r\n            <Button color=\"info\" onClick={()=>{\r\n               returnBook(issue._id); \r\n            }}>Return</Button>\r\n            </td>         \r\n            </React.Fragment>\r\n       );\r\n}\r\n\r\nclass Return extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n         }\r\n        this.i=1; \r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\nrender(){\r\n    console.log(this.props.issues);\r\n    if (this.props.issues.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.issues.errMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(this.props.issues.issues.length===0){\r\n        return (\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12 text-center\">\r\n                        <br/><br/><br/><br/>\r\n                        <h4>{'All books have been returned.'}</h4> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        const dueIssues = this.props.issues.issues.filter((issue)=>(!issue.returned));\r\n        const list = dueIssues.map((issue) => {\r\n            return (\r\n                    <tr key={issue._id}>\r\n                        <RenderIssue issue={issue} \r\n                                     i={this.i++}\r\n                                     returnBook={this.props.returnIssue}\r\n                        />\r\n                    </tr>\r\n            );\r\n        });\r\n    \r\n        return(\r\n\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n                <h3>List of books not returned</h3>\r\n                <Table striped bordered hover responsive>\r\n        <thead>\r\n           <tr>\r\n            <th>S.No.</th>\r\n            <th>Name of Student</th>\r\n            <th>Roll No.</th>\r\n            <th>Name of Book</th>\r\n            <th>ISBN number</th>\r\n            <th>Issue Date</th>\r\n            <th>Return Deadline</th>\r\n            <th>Fine (in Rs.)</th>\r\n            <th>Return book</th> \r\n           </tr>\r\n        </thead>\r\n        <tbody>\r\n            {list}\r\n        </tbody>\r\n        </Table>\r\n            <br/>\r\n            <h6> Total Fine due (if all pending books are returned today) : Rs. {totalFine} </h6>\r\n            <br/>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Return;","import React,{Component} from 'react';\r\nimport {Card,CardBody,CardHeader,CardText} from 'reactstrap';\r\nimport Loading from './LoadingComponent';\r\n\r\nclass UserDetail extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\n\r\nrender(){\r\n    if (this.props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.errMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else    \r\n    return(\r\n\r\n        <div className=\"container mt-6 home text-center align-self-center\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            \r\n            <Card className=\"heading\">\r\n                \r\n        <CardHeader><h3>User Details</h3></CardHeader>\r\n        <CardBody>\r\n          <CardText>\r\n          <h5> First Name : {'          '+this.props.user.firstname}</h5>\r\n          <h5> Last Name : {'          '+this.props.user.lastname}</h5>\r\n          <h5> {(this.props.user.admin)?'Admin Id : ':'Roll No.'} : {'          '+this.props.user.roll}</h5>\r\n          <h5> Email : {'          '+this.props.user.email}</h5>\r\n          <h5> Username : {'          '+this.props.user.username}</h5>\r\n          </CardText>\r\n        </CardBody>\r\n          </Card>\r\n            </div>\r\n            </div>\r\n        );\r\n}\r\n\r\n}\r\n\r\nexport default UserDetail;","import React,{Component} from 'react';\r\nimport { Card, CardText, CardBody, CardLink,\r\n    CardTitle, Button } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Loading from './LoadingComponent.js';\r\n\r\nclass Stats extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n         }\r\n        this.i=1; \r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\nrender(){\r\n    if (this.props.issues.isLoading||this.props.booksLoading||this.props.usersLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.issues.errMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.issues.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.usersErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.usersErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.booksErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.booksErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n\r\n    \r\n        return(\r\n\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n            <div className=\"row text-center justify-content-center heading\">\r\n            <div className=\"col-12\">\r\n                <h3>Stats</h3>\r\n            </div>\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>\r\n                        <h1>{this.props.books.length}</h1>\r\n                    </CardTitle>\r\n                    <CardText>Different books available</CardText>\r\n                        <CardLink tag={Link} to=\"/books\">\r\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\r\n                             {' '}&nbsp;View\r\n                            </Button>           \r\n                        </CardLink>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>\r\n                        <h1>{this.props.issues.issues.length}</h1>\r\n                    </CardTitle>\r\n                    <CardText>Books Issued</CardText>\r\n                        <CardLink tag={Link} to=\"/logs\">\r\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\r\n                             {' '}&nbsp;View\r\n                            </Button>           \r\n                        </CardLink>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>\r\n                    <h1>\r\n                    {this.props.issues.issues.filter((issue)=>(!issue.returned)).length}\r\n                    </h1>\r\n                    </CardTitle>\r\n                    <CardText>Books not yet returned</CardText>\r\n                        <CardLink>\r\n                            <Button tag={Link} to=\"/return\" color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\r\n                             {' '}&nbsp;View\r\n                            </Button>           \r\n                        </CardLink>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>\r\n                        <h1>{this.props.users.filter((user)=>(!user.admin)).length}</h1>\r\n                    </CardTitle>\r\n                    <CardText>Students registered</CardText>\r\n                        <CardLink tag={Link} to=\"/list_students\">\r\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\r\n                             {' '}&nbsp;View\r\n                            </Button>           \r\n                        </CardLink>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>\r\n                        <h1>{this.props.users.filter((user)=>(user.admin)).length}</h1>\r\n                    </CardTitle>\r\n                    <CardText>Administrators in-charge</CardText>\r\n                        <CardLink tag={Link} to=\"/list_admins\">\r\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\r\n                             {' '}&nbsp;View\r\n                            </Button>           \r\n                        </CardLink>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n            </div>\r\n            \r\n            <br/>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Stats;","import React,{Component} from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Loading from './LoadingComponent.js';\r\n\r\nconst fineRate=1;\r\n\r\nconst allowedDays=30;\r\nfunction RenderIssue ({issue,i}) {\r\n    const dates=[];\r\n    const today= new Date();\r\n    dates.push(today);\r\n    const issueDate=new Date(Date.parse(issue.createdAt));\r\n    const deadline = new Date( Date.parse(issue.createdAt));\r\n    deadline.setDate(deadline.getDate()+30);\r\n    dates.push(deadline);\r\n    const returnDate=issue.returned?new Date(Date.parse((issue.updatedAt))):(new Date(Math.min.apply(null,dates)));\r\n    let fine=0;\r\n      if(((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))>allowedDays)\r\n      {\r\n        fine=Math.floor((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))*fineRate;\r\n      }\r\n    return (\r\n            <React.Fragment>\r\n            <td>\r\n            {i}\r\n            </td>\r\n            <td>\r\n            <Link to={`/users/${issue.student._id}`}>\r\n            {issue.student.firstname+' '+issue.student.lastname}\r\n            </Link>\r\n            </td>\r\n            <td>\r\n            {issue.student.roll}\r\n            </td>\r\n            <td>\r\n            {issue.book==null ? \"N/A\":<Link to={`/books/${issue.book._id}`}>\r\n            {issue.book.name}\r\n            </Link>}\r\n            </td>\r\n            <td>\r\n            {issue.book==null ? \"N/A\":issue.book.isbn}\r\n            </td>\r\n            <td>\r\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(issue.createdAt)))}\r\n            </td>\r\n            <td>\r\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(deadline)}\r\n            </td>\r\n            <td>\r\n                {\r\n        issue.returned?('Returned on '+(new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(returnDate)))))                    \r\n               :('Not returned yet')\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    fine\r\n                }\r\n            </td>\r\n            </React.Fragment>\r\n       );\r\n}\r\n\r\nclass Log extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n         }\r\n        this.i=1; \r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\nrender(){\r\n\r\n    if (this.props.issues.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.issues.errMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(this.props.issues.issues.length===0){\r\n        return (\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12 text-center\">\r\n                        <br/><br/><br/><br/>\r\n                        <h4>{'You have not issued any books.'}</h4> \r\n                        <h4>{'Request admin to issue a book'}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        const list = this.props.issues.issues.map((issue) => {\r\n            return (\r\n                    <tr key={issue._id}>\r\n                        <RenderIssue issue={issue} \r\n                                     i={this.i++}\r\n                        />\r\n                    </tr>\r\n            );\r\n        });\r\n    \r\n        return(\r\n\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n                <h3>Issue Log</h3>\r\n                <Table striped bordered hover responsive>\r\n        <thead>\r\n           <tr>\r\n            <th>S.No.</th>\r\n            <th>Name of Student</th>\r\n            <th>Roll No.</th>\r\n            <th>Name of Book</th>\r\n            <th>ISBN number</th>\r\n            <th>Issue Date</th>\r\n            <th>Return Deadline</th>\r\n            <th>Return status</th> \r\n            <th>Fine (in Rs.)</th> \r\n           </tr>\r\n        </thead>\r\n        <tbody>\r\n            {list}\r\n        </tbody>\r\n        </Table>\r\n            <br/>\r\n           \r\n            <br/>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Log;","import React,{Component} from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Loading from './LoadingComponent.js';\r\n\r\nfunction RenderUser ({user,i}) {\r\n    return (\r\n            <React.Fragment>\r\n            <td>\r\n            {i}\r\n            </td>\r\n            <td>\r\n            <Link to={`/users/${user._id}`}>\r\n            {user.firstname+' '+ user.lastname}\r\n            </Link>\r\n            </td>\r\n            <td>\r\n            {user.roll}\r\n            </td>\r\n            <td>\r\n            {user.username}\r\n            </td>\r\n            <td>\r\n            {user.email}\r\n            </td>\r\n            </React.Fragment>\r\n       );\r\n}\r\n\r\nclass UserList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n         }\r\n        this.i=1; \r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\nrender(){\r\n\r\n    if (this.props.usersLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.usersErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(this.props.users.length===0){\r\n        return (\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12 text-center\">\r\n                        <br/><br/><br/><br/>\r\n                        <h4>{'No users found'}</h4> \r\n                           </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        const list = this.props.users.map((user) => {\r\n            return (\r\n                    <tr key={user._id}>\r\n                        <RenderUser user={user} \r\n                                     i={this.i++}\r\n                        />\r\n                    </tr>\r\n            );\r\n        });\r\n    \r\n        return(\r\n\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n                <h3>List of {this.props.users[0].admin?' admins in-charge': ' students registered'}</h3>\r\n                <Table striped bordered hover responsive>\r\n        <thead>\r\n           <tr>\r\n            <th>S.No.</th>\r\n            <th>Name of {this.props.users[0].admin?' admin': ' student'}</th>\r\n            <th>{this.props.users[0].admin?' Admin Id': ' Roll No.'}</th>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {list}\r\n        </tbody>\r\n        </Table>\r\n            <br/>\r\n            <br/>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default UserList;","export const BOOKS_LOADING = 'BOOKS_LOADING';\r\nexport const BOOKS_FAILED = 'BOOKS_FAILED';\r\nexport const ADD_BOOKS = 'ADD_BOOKS';\r\nexport const ADD_BOOK = 'ADD_BOOK';\r\nexport const EDIT_BOOK = 'EDIT_BOOK';\r\nexport const DELETE_BOOK = 'DELETE_BOOK';\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const EDIT_PASSWORD = 'EDIT_PASSWORD';\r\nexport const ISSUES_LOADING = 'ISSUES_LOADING';\r\nexport const ISSUES_FAILED = 'ISSUES_FAILED';\r\nexport const ADD_ISSUES = 'ADD_ISSUES';\r\nexport const ADD_ISSUE = 'ADD_ISSUE';\r\nexport const RETURN_ISSUE = 'RETURN_ISSUE';\r\nexport const USERS_LOADING = 'USERS_LOADING';\r\nexport const USERS_FAILED = 'USERS_FAILED';\r\nexport const ADD_USERS = 'ADD_USERS';","export const baseUrl=\"http://localhost:5000/api/\";","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../baseUrl'\r\n\r\nexport const addBook = (book) => ({\r\n  type: ActionTypes.ADD_BOOK,\r\n  payload: book\r\n});\r\n\r\nexport const postBook = (name, author, description, isbn, cat, floor, shelf, copies) => (dispatch) => {\r\n    const newBook = {\r\n      name: name, author: author,\r\n       description: description, isbn: isbn,\r\n        cat: cat, floor: floor, \r\n        shelf: shelf, copies: copies\r\n    };\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    return fetch(baseUrl + 'books', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newBook),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        }\r\n     //   ,        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { alert('Book added successfully');\r\n      return  dispatch(addBook(response));})\r\n    .catch(error =>  { alert('Your book could not be added\\nError: '+error.message); });\r\n};\r\n\r\nexport const editBook = (_id, name, author, description, isbn, cat, floor, shelf, copies) => (dispatch) => {\r\n\r\n  const newBook = {\r\n    name: name, author: author,\r\n     description: description, isbn: isbn,\r\n      cat: cat, floor: floor, \r\n      shelf: shelf, copies: copies\r\n  };\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'books/' + _id, {\r\n      method: \"PUT\"\r\n    //  ,     credentials: 'same-origin'\r\n      ,      body: JSON.stringify(newBook),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': bearer\r\n      } })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => (dispatch(editBookdispatch(response))))\r\n  .catch(error =>  {  \r\n  alert('Your book could not be edited\\nError: '+error.message); });\r\n};\r\n\r\nexport const editPassword = (_id,username,password) => (dispatch) => {\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'users/password/' + _id, {\r\n    method: \"PUT\"\r\n  //  ,     credentials: 'same-origin'\r\n    ,      body: JSON.stringify({password: password}),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      'Authorization': bearer\r\n    } })\r\n.then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText+'\\n ');\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        throw error;\r\n  })\r\n.then(response => response.json())\r\n.then(response => { \r\n  let newCreds={username: username, password: password};\r\n  localStorage.removeItem('creds');\r\n  localStorage.setItem('creds', JSON.stringify(newCreds));\r\n  alert('Password changed successfully');\r\n  return dispatch(editPasswordDispatch(newCreds));})\r\n.catch(error =>  {  \r\nalert('Your password could not be changed\\nError: '+error.message); });\r\n}\r\n\r\nexport const editUser = (_id, firstname, lastname, roll, email) => (dispatch) => {\r\n\r\n  const newUser = {\r\nfirstname: firstname,\r\nlastname: lastname,\r\nroll: roll,\r\nemail: email  };\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'users/' + _id, {\r\n      method: \"PUT\"\r\n    //  ,     credentials: 'same-origin'\r\n      ,      body: JSON.stringify(newUser),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': bearer\r\n      } })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => { \r\n    localStorage.removeItem('userinfo');\r\n    localStorage.setItem('userinfo', JSON.stringify(response));\r\n    return dispatch(editUserdispatch(response));})\r\n  .catch(error =>  {  \r\n  alert('Your profile could not be edited\\nError: '+error.message+'\\n May be someone has already registered with that Roll No. or Email'); });\r\n};\r\n\r\nexport const deleteBook = (_id) => (dispatch) => {\r\n  \r\n  const bearer = 'Bearer ' + localStorage.getItem('token');    \r\n  return fetch(baseUrl + 'books/' + _id, {\r\n      method: \"DELETE\"\r\n    //  ,       credentials: \"same-origin\"\r\n      ,       headers: {\r\n        'Authorization': bearer\r\n      }\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(deleteBookdispatch(response)))\r\n  .catch(error =>  {alert('Your book could not be deleted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchBooks = () => (dispatch) => {\r\n    dispatch(booksLoading(true));\r\n    return fetch(baseUrl+'books')\r\n        .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(books => dispatch(addBooks(books)))\r\n    .catch(error => dispatch(booksFailed(error.message)));\r\n}\r\n\r\n\r\nexport const fetchUsers = () => (dispatch) => {\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  dispatch(usersLoading(true));\r\n  return fetch(baseUrl+'users',{\r\n    headers: {\r\n      'Authorization': bearer\r\n    }\r\n  })\r\n      .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(users => dispatch(addUsers(users)))\r\n  .catch(error => dispatch(usersFailed(error.message)));\r\n}\r\n\r\n\r\nexport const booksLoading = () => ({\r\n    type: ActionTypes.BOOKS_LOADING\r\n});\r\n\r\nexport const booksFailed = (errmess) => ({\r\n    type: ActionTypes.BOOKS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addBooks = (books) => ({\r\n    type: ActionTypes.ADD_BOOKS,\r\n    payload: books\r\n});\r\n\r\nexport const addUsers = (users) => ({\r\n  type: ActionTypes.ADD_USERS,\r\n  payload: users\r\n});\r\n\r\nexport const usersLoading = () => ({\r\n  type: ActionTypes.USERS_LOADING\r\n});\r\n\r\nexport const editBookdispatch = (books) => ({\r\n  type: ActionTypes.EDIT_BOOK,\r\n  payload: books\r\n});\r\n\r\nexport const returnBookdispatch = (issue) => ({\r\n  type: ActionTypes.RETURN_ISSUE,\r\n  payload: issue\r\n});\r\n\r\nexport const editUserdispatch = (USER) => ({\r\n  type: ActionTypes.EDIT_USER,\r\n  payload: USER\r\n});\r\n\r\nexport const editPasswordDispatch = (CREDS) => ({\r\n  type: ActionTypes.EDIT_PASSWORD,\r\n  payload: CREDS\r\n})\r\n\r\nexport const deleteBookdispatch = (resp) => ({\r\n  type: ActionTypes.DELETE_BOOK,\r\n  payload: resp\r\n});\r\n\r\nexport const requestLogin = (creds) => {\r\n  return {\r\n      type: ActionTypes.LOGIN_REQUEST,\r\n      creds\r\n  }\r\n}\r\n\r\nexport const receiveLogin = (response) => {\r\n  return {\r\n      type: ActionTypes.LOGIN_SUCCESS,\r\n      token: response.token,\r\n      userinfo: response.userinfo\r\n  }\r\n}\r\n\r\nexport const loginError = (message) => {\r\n  return {\r\n      type: ActionTypes.LOGIN_FAILURE,\r\n      message\r\n  }\r\n}\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n\r\n  dispatch(requestLogin(creds));\r\n  return fetch(baseUrl + 'users/login', {\r\n      method: 'POST',\r\n      headers: { \r\n          'Content-Type':'application/json' \r\n      },\r\n      body: JSON.stringify(creds)\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n          return response;\r\n      } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n      },\r\n      error => {\r\n          throw error;\r\n      })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n      if (response.success) {\r\n          // If login was successful, set the token in local storage\r\n          localStorage.setItem('token', response.token);\r\n          localStorage.setItem('creds', JSON.stringify(creds));\r\n          localStorage.setItem('userinfo', JSON.stringify(response.userinfo));    \r\n          dispatch(fetchIssues(!response.userinfo.admin));      \r\n          if(response.userinfo.admin) {\r\n            dispatch(fetchUsers())\r\n          }\r\n          setTimeout(()=>{\r\n            logoutUser();\r\n            alert('Your JWT token has expired. \\nPlease log in again to continue.');\r\n           },3600*1000);\r\n          // Dispatch the success action\r\n          dispatch(receiveLogin(response));\r\n      \r\n      }\r\n      else {\r\n          var error = new Error('Error ' + response.status);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n  })\r\n  .catch(error => {\r\n    alert(error.message+'\\n'+\"Username and password didn't match\");\r\n     return dispatch(loginError(error.message));})\r\n};\r\n\r\nexport const registerUser = (creds) => (dispatch) => {\r\n\r\n\r\n  return fetch(baseUrl + 'users/signup', {\r\n      method: 'POST',\r\n      headers: { \r\n          'Content-Type':'application/json' \r\n      },\r\n      body: JSON.stringify(creds)\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n          return response;\r\n      } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n      },\r\n      error => {\r\n          throw error;\r\n      })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n      if (response.success) {\r\n          // If Registration was successful, alert the user\r\n          alert('Registration Successful');\r\n        }\r\n      else {\r\n          var error = new Error('Error ' + response.status);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n  })\r\n  .catch(error => alert(error.message+'\\n'+\r\n      'May be someone has already registered with that username, email or Roll No.\\nTry Entering a new username,email or Roll No. '))\r\n};\r\n\r\nexport const addIssue = (issue) => ({\r\n  type: ActionTypes.ADD_ISSUE,\r\n  payload: issue\r\n});\r\n\r\nexport const postIssue = (bookId,studentId) => (dispatch) => {\r\n    const newIssue = {\r\n    book: bookId,\r\n    student: studentId \r\n    };\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    return fetch(baseUrl + 'issues', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newIssue),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        }\r\n     //   ,        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { alert('Book issued successfully');\r\n      return  dispatch(addIssue(response));})\r\n    .catch(error =>  {\r\n      alert('Book could not be issued\\nError: '+error.message+'\\n'+\r\n      'May be the student has already issued 3 books and not returned. Please return them first. \\n'+\r\n      'or the book may not available. You can wait for some days, until the book is returned to library.'); });\r\n};\r\n\r\nexport const returnIssue = (issueId) => (dispatch) => {\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'issues/' + issueId, {\r\n      method: \"PUT\"\r\n    //  ,     credentials: 'same-origin'\r\n    , headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': bearer\r\n      } })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => { \r\n    alert('Book returned successfully');\r\n    return dispatch(returnBookdispatch(response));})\r\n  .catch(error =>  {  \r\n  alert('The book could not be returned\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchIssues = (student) => (dispatch) => {\r\n  let issueUrl;\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  if(student) {\r\n    issueUrl='issues/student';\r\n  }\r\n  else {\r\n    issueUrl='issues';\r\n  }\r\n  dispatch(issuesLoading(true));\r\n  return fetch(baseUrl+issueUrl,{\r\n     headers: {\r\n        'Authorization': bearer\r\n       }\r\n  })\r\n      .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(issues => dispatch(addIssues(issues)))\r\n  .catch(error => dispatch(issuesFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const issuesLoading = () => ({\r\n  type: ActionTypes.ISSUES_LOADING\r\n});\r\n\r\nexport const issuesFailed = (errmess) => ({\r\n  type: ActionTypes.ISSUES_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addIssues = (issues) => ({\r\n  type: ActionTypes.ADD_ISSUES,\r\n  payload: issues\r\n});\r\n\r\nexport const usersFailed = (errmess) => ({\r\n  type: ActionTypes.USERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\n\r\nexport const requestLogout = () => {\r\n  return {\r\n    type: ActionTypes.LOGOUT_REQUEST\r\n  }\r\n}\r\n\r\nexport const receiveLogout = () => {\r\n  return {\r\n    type: ActionTypes.LOGOUT_SUCCESS\r\n  }\r\n}\r\n\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout())\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('creds');  \r\n  localStorage.removeItem('userinfo');  \r\n  dispatch(receiveLogout())\r\n}\r\n","import React, {Component} from 'react';\r\nimport Header from './HeaderComponent.js';\r\nimport Footer from './FooterComponent.js';\r\nimport Home from './HomeComponent.js';\r\nimport Booklist from './BooksComponent.js';\r\nimport Search from './SearchComponent.js';\r\nimport BookDetail from './BookDetailComponent.js';\r\nimport Profile from './ProfileComponent.js';\r\nimport AddBook from './AddBookComponent.js';\r\nimport History from './HistoryComponent.js';\r\nimport Issue from './IssueComponent.js';\r\nimport Return from './ReturnComponent.js';\r\nimport UserDetail from './UserDetailComponent.js';\r\nimport Stats from './StatsComponent.js';\r\nimport Log from './LogComponent.js';\r\nimport UserList from './UserListComponent.js';\r\n\r\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Modal,ModalBody,ModalHeader,Button, Label, Col, Row} from 'reactstrap';\r\nimport { postBook, fetchBooks, editBook, deleteBook,loginUser, logoutUser, \r\n  registerUser, editUser, editPassword, postIssue, returnIssue, fetchIssues, fetchUsers} from '../redux/ActionCreators';\r\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst requiredNum = (val) => !!(val);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst maxVal = (len) => (val) => !(val) || (val<= len);\r\nconst minVal = (len) => (val) => (val) && (val>= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\nconst mapStateToProps= (state)=>{\r\n  return{\r\n    books: state.books,\r\n    auth: state.auth,\r\n    issues: state.issues,\r\n    users: state.users\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchBooks: () => { dispatch(fetchBooks())},\r\n  fetchIssues: (student) =>{ dispatch(fetchIssues(student))},\r\n  fetchUsers: () => { dispatch(fetchUsers())},\r\n  postBook: (name, author, description, isbn, cat, floor, shelf, copies) => dispatch(postBook(name, author, description, isbn, cat, floor, shelf, copies)),\r\n  editBook: (_id, name, author, description, isbn, cat, floor, shelf, copies) => dispatch(editBook(_id, name, author, description, isbn, cat, floor, shelf, copies)),\r\n  deleteBook: (_id) =>  dispatch(deleteBook(_id)),\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n  registerUser: (creds) => dispatch(registerUser(creds)),\r\n  editUser: (_id, firstname, lastname, roll, email) => dispatch(editUser(_id, firstname, lastname, roll, email)),\r\n  editPassword : (_id,username,password) => dispatch(editPassword(_id,username,password)),\r\n  postIssue: (bookId,studentId) => (dispatch(postIssue(bookId,studentId))),\r\n  returnIssue: (issueId) => (dispatch(returnIssue(issueId)))\r\n});\r\n\r\nclass Main extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n    if(this.props.auth.isAuthenticated){\r\n      this.props.fetchIssues(!this.props.auth.userinfo.admin);\r\n    }\r\n    if(this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin){\r\n      this.props.fetchUsers();\r\n    }\r\n  }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          isDeleteModalOpen: false,\r\n          isEditModalOpen: false,\r\n          selectedBook: null\r\n        };\r\n        this.toggleDeleteModal=this.toggleDeleteModal.bind(this);\r\n        this.toggleEditModal=this.toggleEditModal.bind(this);\r\n        this.changeSelected=this.changeSelected.bind(this);\r\n        this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\r\n      }\r\n    \r\n      handleSubmitEdit(values) {\r\n        this.toggleEditModal();\r\n        this.props.editBook(this.state.selectedBook._id, values.name, values.author,\r\n          values.description, values.isbn, values.cat, values.floor, values.shelf, values.copies);     \r\n        }\r\n    \r\n    changeSelected(_id){\r\n      this.setState({selectedBook:this.props.books.books.filter((book)=>(book._id===_id))[0]});\r\n    }\r\n\r\n    toggleDeleteModal(){\r\n      this.setState({isDeleteModalOpen: !this.state.isDeleteModalOpen})\r\n    }\r\n    \r\n    toggleEditModal(){\r\n      this.setState({isEditModalOpen: !this.state.isEditModalOpen});\r\n    }\r\n\r\n    render(){\r\n      const BookWithId = ({match}) => {\r\n      let selectedBook=this.props.books.books.filter((book) => (book._id)===(match.params.bookId))[0]\r\n      let notFoundErr=null;\r\n      if(selectedBook===undefined){\r\n      notFoundErr=(\"\\n\\n Error 404 :  Book not found\");\r\n      }  \r\n      return(\r\n          <BookDetail book={selectedBook}\r\n          isLoading={this.props.books.isLoading}\r\n          errMess={this.props.books.errMess||notFoundErr}\r\n          toggleEditModal={this.toggleEditModal}\r\n          changeSelected={this.changeSelected}\r\n          isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n          />\r\n          );\r\n      };\r\n    \r\n      const UserWithId = ({match}) => {\r\n        let selectedUser=this.props.users.users.filter((user) => ((user._id)===(match.params.userId)))[0];\r\n        let notFoundErr=null;\r\n        if(selectedUser===undefined){\r\n        notFoundErr=(\"\\n\\n Error 404 :  User not found\");\r\n        }  \r\n        return(\r\n            <UserDetail user={selectedUser}\r\n            isLoading={this.props.users.isLoading}\r\n            errMess={this.props.users.errMess||notFoundErr}\r\n            />\r\n            );\r\n        };\r\n   \r\n      const PrivateRouteCommon = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      const PrivateRouteAdmin = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      const PrivateRoute = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      let uniqueIsbn= (defaultIsbn)=> (val) =>(!this.props.books.books.some((book)=>(book.isbn===val))||(val===defaultIsbn))\r\n      let uniqueName= (defaultName)=>(val) =>(!this.props.books.books.some((book)=>(book.name===val))||(val===defaultName))\r\n\r\n    return ( \r\n          <div className=\"App\">\r\n          <Header auth={this.props.auth} \r\n          loginUser={this.props.loginUser} \r\n          logoutUser={this.props.logoutUser}\r\n          registerUser={this.props.registerUser}\r\n          />\r\n          <Switch location={this.props.location}>\r\n                      <Route exact path='/home' component={() => <Home />} />\r\n                      <Route exact path='/search' component={() => <Search \r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      isSignedIn={this.props.auth.isAuthenticated}\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      toggleEditModal={this.toggleEditModal}\r\n                      toggleDeleteModal={this.toggleDeleteModal}\r\n                      changeSelected={this.changeSelected}\r\n                />}\r\n                />\r\n\r\n                      <Route exact path='/books' component={() => <Booklist\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      isSignedIn={this.props.auth.isAuthenticated}\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      auth={this.props.auth}\r\n                      toggleEditModal={this.toggleEditModal}\r\n                      toggleDeleteModal={this.toggleDeleteModal}\r\n                      changeSelected={this.changeSelected}/>}/>\r\n                      <Route path='/books/:bookId' component={BookWithId} />\r\n                      <PrivateRouteCommon exact path='/profile' component={() => <Profile\r\n                      auth={this.props.auth}\r\n                      editUser={this.props.editUser} \r\n                      editPassword={this.props.editPassword}/>\r\n                      }\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/add_book' component={() => <AddBook\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      postBook={this.props.postBook}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      />\r\n                      }/>\r\n                      <PrivateRoute exact path='/profile' component={() => <Profile\r\n                      auth={this.props.auth}\r\n                      editUser={this.props.editUser} />}\r\n                      />\r\n                       <PrivateRoute exact path='/history' component={() => <History\r\n                      issues={this.props.issues}\r\n                      auth={this.props.auth}\r\n                     />}\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/logs' component={() => <Log\r\n                      issues={this.props.issues}\r\n                     />}\r\n                      />\r\n                         <PrivateRouteAdmin exact path='/list_students' component={() => <UserList\r\n                      users={this.props.users.users.filter((user)=>(!user.admin))}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}\r\n                      />\r\n                         <PrivateRouteAdmin exact path='/list_admins' component={() => <UserList\r\n                      users={this.props.users.users.filter((user)=>(user.admin))}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/issue' component={() => <Issue\r\n                      auth={this.props.auth}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      users={this.props.users.users}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                      postIssue={this.props.postIssue}\r\n                       />} />\r\n                      <PrivateRouteAdmin exact path='/return' component={() => <Return\r\n                      issues={this.props.issues}\r\n                      auth={this.props.auth}\r\n                      returnIssue={this.props.returnIssue}\r\n                     />} />\r\n                      <PrivateRouteAdmin path='/users/:userId' component={UserWithId}/>\r\n                      <PrivateRouteAdmin path='/stats' component={() => <Stats\r\n                      issues={this.props.issues}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      users={this.props.users.users}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}/>\r\n                      <Redirect to=\"/home\"/>\r\n          </Switch>\r\n        <Footer/>\r\n        <Modal isOpen={this.state.isDeleteModalOpen} toggle={this.toggleDeleteModal}>\r\n                     <ModalHeader toggle={this.toggleDeleteModal}>\r\n                         Confirm Deletion\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                       Book details : <br/><br/>\r\n                        Name : {this.state.selectedBook?this.state.selectedBook.name:''} <br/>\r\n                        Authors : {this.state.selectedBook?this.state.selectedBook.author:''} <br/>\r\n                        ISBN Number : {this.state.selectedBook?this.state.selectedBook.isbn:''} <br/>\r\n                        Available Copies : {this.state.selectedBook?this.state.selectedBook.copies:''} <br/> <br/>\r\n                        Are you sure you wish to delete this book ? <br/><br/>\r\n         <Button color=\"danger\" onClick={()=>{\r\n           this.props.deleteBook(this.state.selectedBook._id);\r\n           this.toggleDeleteModal();}}>Yes</Button>{' '}  \r\n         <Button color=\"warning\" onClick={()=>{\r\n           this.toggleDeleteModal();\r\n         }}>No</Button>\r\n                     </ModalBody>\r\n          </Modal>\r\n          {this.state.selectedBook?(\r\n                 <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\r\n                     <ModalHeader toggle={this.toggleEditModal}>\r\n                         Edit a book\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmitEdit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        defaultValue={this.state.selectedBook.name}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),\r\n                                            uniqueName: uniqueName(this.state.selectedBook.name)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            uniqueName: ' There exists a book with this name already'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>                    \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Authors </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        defaultValue={this.state.selectedBook.author}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"isbn\" md={4}>ISBN No.</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".isbn\" id=\"isbn\" name=\"isbn\"\r\n                                        defaultValue={this.state.selectedBook.isbn}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10), maxLength: maxLength(13), isNumber,\r\n                                            uniqueIsbn: uniqueIsbn(this.state.selectedBook.isbn)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".isbn\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 9 numbers',\r\n                                            maxLength: 'Must be 13 numbers or less',\r\n                                            isNumber: 'Must be a number',\r\n                                            uniqueIsbn: ' There exists a book with this ISBN No.'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                                        \r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"cat\">Category</Label>\r\n                            <Control.select model=\".cat\" id=\"cat\" className=\"form-control\" defaultValue={this.state.selectedBook.cat}>\r\n                              <option>Romance</option> <option>Technology</option>\r\n                              <option>Computer Science</option> <option>Management</option>\r\n                              <option>Electronics</option> <option>Physics</option>\r\n                              <option>Chemistry</option> <option>Mathematics</option>\r\n                              <option>Fiction</option> <option>Philosophy</option>\r\n                              <option>Language</option> <option>Arts</option>\r\n                              <option>Other</option> \r\n\r\n                                                          </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"copies\" md={6}> Copies Available</Label>\r\n                                <Col md={6}>\r\n                                    <Control.text model=\".copies\" id=\"copies\" name=\"copies\"\r\n                                        defaultValue={this.state.selectedBook.copies}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(1000), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".copies\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: 'Must be greater than 0',\r\n                                            maxVal: 'Must be 1000 or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"floor\">Floor </Label>\r\n                            <Control.select model=\".floor\" id=\"floor\" className=\"form-control\" defaultValue={this.state.selectedBook.floor}>\r\n                              <option>0</option> <option>1</option>\r\n                              <option>2</option> <option>3</option>\r\n                              <option>4</option> <option>5</option>\r\n                              <option>6</option> <option>7</option>\r\n                              <option>8</option> \r\n                            </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"shelf\" md={6}> Shelf</Label>\r\n                                <Col md={6}>\r\n                                    <Control.text model=\".shelf\" id=\"shelf\" name=\"shelf\"\r\n                                        defaultValue={this.state.selectedBook.shelf}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(100), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".shelf\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: 'Must be greater than 0',\r\n                                            maxVal: 'Must be 100 or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                     \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\r\n                                        rows=\"12\"\r\n                                        defaultValue={this.state.selectedBook.description}\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                          <Row>\r\n                          <Col className=\"ml-auto mr-auto\">\r\n                        <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n                        </Button>\r\n                        </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n               \r\n          </Modal>):(<React.Fragment/>)}\r\n\r\n          </div>\r\n           );     \r\n    }\r\n    }\r\n\r\n    export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nconst Books = (state = { isLoading: true,\r\n    errMess: null,\r\n    books:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_BOOKS:\r\n            return {...state, isLoading: false, errMess: null, books: action.payload};\r\n\r\n        case ActionTypes.BOOKS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, books: []}\r\n\r\n        case ActionTypes.BOOKS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_BOOK:\r\n            var book = action.payload;\r\n            return { ...state, books: state.books.concat(book)};\r\n\r\n        case ActionTypes.EDIT_BOOK:\r\n            var newbook = action.payload;\r\n            return { ...state, books: state.books.map((book)=>\r\n                {\r\n                if(book._id===newbook._id)\r\n                {\r\n                    return newbook;\r\n                }\r\n            else {\r\n                    return book;\r\n            }\r\n                 })\r\n                }\r\n\r\n        case ActionTypes.DELETE_BOOK:\r\n        var resp = action.payload;\r\n        return { ...state, books: state.books.filter((book)=>{\r\n            return book._id!==resp._id}) }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default Books;","import * as ActionTypes from './ActionTypes';\r\n\r\n// The auth reducer. The starting state sets authentication\r\n// based on a token being in local storage. In a real app,\r\n// we would also want a util to check if the token is expired.\r\nconst Auth = (state = {\r\n        isLoading: false,\r\n        isAuthenticated: localStorage.getItem('token') ? true : false,\r\n        token: localStorage.getItem('token'),\r\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\r\n        userinfo: localStorage.getItem('userinfo') ? JSON.parse(localStorage.getItem('userinfo')) : null,\r\n        errMess: null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.creds\r\n            };\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: '',\r\n                token: action.token,\r\n                userinfo: action.userinfo\r\n            };\r\n        case ActionTypes.LOGIN_FAILURE:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.message\r\n            };\r\n        case ActionTypes.LOGOUT_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: true\r\n            };\r\n            \r\n        case ActionTypes.LOGOUT_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                token: '',\r\n                user: null,\r\n                userinfo: null\r\n            };\r\n\r\n        case ActionTypes.EDIT_USER:\r\n            return {...state,\r\n                userinfo: action.payload};\r\n\r\n        case ActionTypes.EDIT_PASSWORD:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default Auth;","import * as ActionTypes from './ActionTypes';\r\n\r\nconst Issues = (state = { isLoading: true,\r\n    errMess: null,\r\n    issues:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_ISSUES:\r\n            return {...state, isLoading: false, errMess: null, issues: action.payload};\r\n\r\n        case ActionTypes.ISSUES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, issues: []}\r\n\r\n        case ActionTypes.ISSUES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_ISSUE:\r\n            var issue = action.payload;\r\n            return { ...state, issues: state.issues.concat(issue)};\r\n\r\n        case ActionTypes.RETURN_ISSUE:\r\n            var newissue = action.payload;\r\n            return { ...state, issues: state.issues.map((issue)=>\r\n                {\r\n                if(issue._id===newissue._id)\r\n                {\r\n                    return newissue;\r\n                }\r\n            else {\r\n                    return issue;\r\n            }\r\n                 })\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default Issues;","import * as ActionTypes from './ActionTypes';\r\n\r\nconst Users = (state = { isLoading: true,\r\n    errMess: null,\r\n    users:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_USERS:\r\n            return {...state, isLoading: false, errMess: null, users: action.payload};\r\n\r\n        case ActionTypes.USERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, users: []}\r\n\r\n        case ActionTypes.USERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default Users;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport  Books  from './books.js';\r\nimport Auth from './auth.js';\r\nimport Issues from './issues.js';\r\nimport Users from './users.js'\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const ConfigureStore = ()=>{\r\n    const store=createStore(\r\n        combineReducers({\r\n            books: Books,\r\n            auth: Auth,\r\n            issues: Issues,\r\n            users: Users\r\n        }),\r\n        composeEnhancers(applyMiddleware(thunk))\r\n    );\r\n    return store;\r\n}","import React from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {ConfigureStore} from './redux/store.js'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport './App.css';\r\n\r\nconst store= ConfigureStore();\r\n\r\nfunction App() {\r\n  return ( \r\n    <Provider store={store}>\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n       <Main/>\r\n      </div>\r\n    </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}